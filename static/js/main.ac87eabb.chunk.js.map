{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","components/About.js","components/Contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","to","abouttext","onClick","toggleMode","htmlFor","Textform","useState","text","setext","heading","rows","value","onChange","event","target","style","backgroundColor","disabled","length","newText","toUpperCase","showAlert","lowText","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","Alert","height","alert","role","msg","About","mystyle","color","prototype","PropTypes","string","defaultProps","contact","for","placeholder","App","setMode","setalert","message","setTimeout","body","console","log","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac87eabb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/Home\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Home\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.abouttext}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/contact\">\r\n                Contact Us\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className={`form-check form-switch text-${props.mode===\"light\" ? \"dark\":\"light\"}`}>{/*to use js in react we use {` ` } and replace vaiale with $ and usig props we can replcae*/}\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode===\"light\" ? \"Dark\":\"Light\"} Mode</label>\r\n</div>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.prototype = { title: PropTypes.string, abouttext: PropTypes.string };\r\nNavbar.defaultProps = {\r\n  title: \"Stranger\",\r\n};\r\n","\r\nimport React , {useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handUpCLick = () =>{\r\n   \r\n    let newText = text.toUpperCase();\r\n    setext(newText);\r\n    props.showAlert(\"converted to uppercase\" , \"success\")\r\n  }\r\n  const handleOnChange =(event) =>{\r\n    \r\n    setext(event.target.value)//to get the input valuese in text area\r\n  }\r\n  const handLoCLick = () =>{\r\n    let lowText = text.toLowerCase();\r\n    setext(lowText);\r\n    props.showAlert(\"converted to lowercase\" , \"success\")\r\n  }\r\n  const handClear = () =>{\r\n    let clearText = \" \"\r\n    setext (clearText);\r\n    props.showAlert(\"text cleared\" , \"success\")\r\n  }\r\n  const handCopy = () =>{\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select()\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"copy to clipboard\" , \"success\")\r\n\r\n\r\n  }\r\n  const [text, setext] = useState(\" \");//the curretn value of text is in usestate\r\n  \r\n \r\n  return (\r\n    <>\r\n    <div className=\"container\" >\r\n        <h1>{props.heading} </h1>\r\n      <div className=\"mb-3\">    \r\n        <textarea\r\n          className=\"form-control\" \r\n          id=\"mybox\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n         style = {{backgroundColor:props.mode===\"light\" ? \"dark\":\"light\"}}\r\n        ></textarea>\r\n      </div>\r\n      <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handUpCLick} >Convert To Uppercase</button>\r\n      <button disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handLoCLick} >Convert To Lowercase</button>\r\n      <button  disabled = {text.length===0}  className=\"btn btn-primary mx-1 my-1\" onClick={handClear} >Clear</button>\r\n      <button  disabled = {text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handCopy} >Copy</button>\r\n    </div>\r\n   \r\n    <div className=\"container  my-5\">\r\n      <h2>Your Summary</h2>\r\n    <p> {text.split(\" \").filter((element =>{return element.length !== 0;})).length} words {text.length}  characters</p>\r\n      <p>  {text.split(\"\").length * 0.008 } Minutes will need to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0 ? text:\"nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n\r\n  \r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function Alert(props) {\r\n\r\n\r\n    return (\r\n\r\n        \r\n        <div style ={{height:'50px'}}>\r\n         {props.alert &&   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n              <strong>{props.alert.type}:</strong> {props.alert.msg}\r\n            </div>}\r\n            </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\n\r\n\r\n\r\n\r\nexport default function About(props) {\r\n  let mystyle ={\r\n color: props.mode === 'dark' ? 'white' :'#042743',\r\n backgroundColor :props.mode === 'dark' ? 'rgb(36 74 104)' :'white',\r\n \r\n\r\n }\r\n \r\n    \r\n    return (\r\n\r\n        <div className=\"container\"  style = { {color: props.mode === 'dark' ? 'white' :'#042743'}}>\r\n\r\n            <h1 className=\"my-3\">About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\" >\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"  style = {mystyle} >\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\"  style = {mystyle}>\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\"   style = {mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingTwo\" >\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"  style = {mystyle} >\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\" >\r\n      <div className=\"accordion-body\"  style = {mystyle}>\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\"  style = {mystyle}>\r\n    <h2 className=\"accordion-header\" id=\"headingThree\" >\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"  style = {mystyle}>\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\" > \r\n      <div className=\"accordion-body\" style = {mystyle}>\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div>\r\n\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function contact(props) {\r\n\r\n    const contactClick = () =>{\r\n        props.showAlert(\"Your Response Has Been Submitted\" , \"success\")\r\n    }\r\n    return (\r\n        <div>\r\n                 <div className=\"mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\"> Name</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"Enter Your Name\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n                <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"@gmail.com\" />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n            </div>\r\n            <div className=\"container\">\r\n\r\n                <button className=\"btn btn-primary mx-1 \"  onClick = {contactClick} >Contact Us</button>\r\n                {/*<a rel=\"stylesheet\" href=\"mailto: shreyashingale282@gmail.com\"</a>>*/} \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport React ,{useState} from 'react';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport About from './components/About';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\nimport Contact from './components/Contact';\n\n\n\nfunction App() {\n const [mode, setMode] = useState('light')\n const [alert, setalert] = useState(null)\n\n const showAlert = (message ,type) =>{\n   setalert({\n     msg:message,\n     type:type\n   })\n }\n\n setTimeout(() => {\n   setalert(null)\n   \n }, 2000);\n\n const toggleMode = () =>{\n   if (mode === \"light\"){\n     setMode(\"dark\")\n     document.body.style.backgroundColor = \"#042743\";\n     document.body.style.color = \"white\";\n     showAlert(\"dark mode is enalbed\" ,\"success\")\n  \n   }\n else{\n  setMode(\"light\")\n   console.log(\"light\")\n   document.body.style.backgroundColor = \"white\";\n   document.body.style.color = \"black\";\n \n   showAlert(\"light mode is enabled\",  \"success\")\n }\n\n }\n  \n  return (\n<>\n<Router>\n\n<Navbar title=\"Textutils\"  abouttext=\"About us\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert = {alert} />\n<div className=\"container my-3\">\n<Switch>\n  {/* users ---> componets\n      users/home react does partial matching thats why we need to use exact to match full path */}\n          <Route exact path =\"/about\">\n            <About  mode={mode} />\n          </Route>\n\n          <Route  exact path =\"/Home\">\n          <Textform  showAlert = {showAlert}  heading=\"Try Textutils-Word Counter ,Character Counter\"/>\n          </Route>\n        </Switch>\n\n        <Route exact path =\"/contact\">\n             \n             <Contact showAlert = {showAlert} />  {/*we need to add the name of the file whch is in capital letter*/}\n           \n          </Route>\n\n     \n\n</div>\n</Router>\n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}